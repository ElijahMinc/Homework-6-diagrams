{"version":3,"sources":["constants/root.js","store/actions/actionTypes.js","store/actions/actions.js","services/chartsConfig.js","components/Charts/ChartHome/ChartHome.js","context/context.js","services/sortDataUSA.js","components/Select/Select.js","components/Charts/ChartStates/ChartStates.js","routes/RoutesConfig.js","components/Charts/ChartStateYear/ChartStateYear.js","components/Header/Header.js","components/Preloader/img/preload.svg","components/Preloader/Preloader.jsx","components/App/App.js","store/reducers/reposReducer.js","store/rootReducer.js","index.js","components/Header/Header.module.css","components/Preloader/Preloader.module.css","components/Select/Select.module.css","components/App/App.module.css"],"names":["API_URL_MAIN","API_DRILLDOWNS","API_MEASURES","API_STATE_VALUE","API_DRILLDOWNS_VALUE_DEFAULT","API_MEASURES_VALUE_DEFAULT","SET_REPOSE","CHANGE_FETCH","SET_CURRENT_DATA_USA","changeStatusFetch","statusFetch","type","payload","setCurrentDataUSA","data","reverse","splice","setRepose","getRepose","api","drillDownsOrYear","meassures","dispatch","a","console","log","axios","then","response","catch","error","ChartConfig","currentDataUsa","selectValueState","height","labels","map","Year","datasets","label","Population","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","plugins","legend","font","size","ChartHome","useDispatch","transfromDataUSA","useSelector","state","reposReducer","datausa","x","slice","React","useEffect","className","Context","createContext","sortDataUSA","selectValue","valueSorting","filter","dataUsa","Select","sortDataYears","id","useContext","getValueSelect","refSelectYear","selectCurrentDefaultValue","defaultValue","onChange","event","styles","select","ref","disabled","dataUSA","index","value","State","year","ChartStates","RouterConfig","path","exact","component","getYears","Set","currentState","Header","setSelectValueState","header","nav","to","header__link","onClick","Preloader","preloader","preloader__wrapper","src","alt","App","isFetching","useState","selectValueYear","setSelectValueYear","currentSelectState","setCurrentSelectState","useRef","Provider","target","selectDisabled","current","currentIndexOption","selectedIndex","dataIdSetOption","dataset","filterDataUSA","app","initialState","action","combineReducers","store","createStore","rootReducer","applyMiddleware","next","getState","reduxThunk","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"0PAEaA,EAAe,8BAEfC,EAAiB,aACjBC,EAAe,WAGfC,EAAkB,QAClBC,EAA+B,OAC/BC,EAA6B,aCT7BC,EAAa,aACbC,EAAe,eACfC,EAAuB,uBCcvBC,EAAoB,SAACC,GAAD,MAAkB,CAAEC,KAAMJ,EAAcK,QAASF,IAErEG,EAAoB,SAACC,GAAD,MAAY,CAAEH,KAAMH,EAAsBI,QAASE,EAAKC,UAAUC,OAAO,EAAG,KAIhGC,EAAY,SAACH,GAAD,MAAY,CAAEH,KAAML,EAAYM,QAASE,IAGrDI,EACV,SACGC,GADH,IAEGC,EAFH,uDAEsBhB,EACnBiB,EAHH,uDAGehB,EAHf,8CAKG,WAAOiB,GAAP,SAAAC,EAAA,6DACGC,QAAQC,IAAR,UAAeN,EAAf,YAAsBlB,EAAtB,YAAwCmB,EAAxC,YAA4DlB,EAA5D,YAA4EmB,IAD/E,SAESK,IAAM,GAAD,OAAIP,EAAJ,YAAWlB,EAAX,YAA6BmB,EAA7B,YAAiDlB,EAAjD,YAAiEmB,IACxEM,MAAK,SAAAC,GACHN,EAASb,GAAkB,IAC3Ba,EAASL,EAAUW,EAASd,KAAKA,UAEnCe,OAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,MAPlC,OAQGR,EAASb,GAAkB,IAR9B,2CALH,uDC3BUsB,EAAc,SAACC,EAAgBC,GAkDzC,MAjDqB,CAClBC,OAAQ,IACRpB,KAAM,CACHqB,OAAQH,EAAeI,KAAI,SAAAtB,GAAI,OAAIA,EAAKuB,QACxCC,SAAU,CAAC,CACRC,MAAON,EACPnB,KAAMkB,EAAeI,KAAI,SAAAtB,GAAI,OAAIA,EAAK0B,cACtCC,gBAAiB,CACd,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEHC,YAAa,CACV,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEHC,YAAa,KAInBC,QAAS,CAENC,OAAQ,CACLC,MAAO,CACJ,CACGC,MAAO,CACJC,aAAa,MAKzBC,QAAS,CACNC,OAAQ,CACLf,OAAQ,CACLgB,KAAM,CACHC,KAAM,U,OCJZC,EA9BG,WACf,IAAM/B,EAAWgC,cAEXC,EADcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAvCC,QACyBvB,KAAI,SAAAwB,GAAC,OAAIA,KAAG7C,UAAU8C,MAAM,EAAG,GAEhE,EAII9B,EAAYwB,EAAkB,kBAH/BrB,EADH,EACGA,OACApB,EAFH,EAEGA,KACA8B,EAHH,EAGGA,QAOH,OAJAkB,IAAMC,WAAU,WACbzC,EAASJ,EAAUlB,MACnB,IAGA,qBAAKgE,UAAU,QAAf,SACG,cAAC,IAAD,CACG9B,OAAQA,EACRpB,KAAMA,EACN8B,QAASA,OC1BRqB,EAAUH,IAAMI,gBCHhBC,EAAc,SAACR,EAASS,EAAaC,GAE/C,OADsBV,EAAQW,QAAO,SAAAC,GAAO,OAAIA,EAAQF,KAAkBD,M,iBCyD9DI,EAlDA,SAAC,GAAqD,IAAnDL,EAAkD,EAAlDA,YAAaM,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,GAAIN,EAAkB,EAAlBA,YAC/C,EAA0CN,IAAMa,WAAWV,GAAnDW,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,cAClBC,EAAmC,IAAPJ,EAAW,eAAiB,cAC9D,OACG,yBACGK,aAAcD,EACd,UAASJ,EACTM,SAAU,SAACC,GAAD,OAAWL,EAAeK,EAAOb,IAC3CJ,UAAWkB,IAAOC,OAClBC,IAAKP,EALR,UAOG,wBAAQQ,UAAQ,EAAhB,SAAkBP,IAEfX,GACAA,EAAY/B,KAAI,SAACkD,EAASC,GACvB,OACG,wBAEGC,MAAOF,EAAQG,MACf,UAASH,EAAQ,YAHpB,SAKIA,EAAQG,OAJJF,MAUdd,GAAiBA,EAAcrC,KAAI,SAACsD,EAAMH,GACvC,OACG,wBAEGC,MAAOE,EAFV,SAIIA,GAHIH,UCiBXI,EA3CK,WACjB,IAAMrE,EAAWgC,cACjB,EAAoCE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAvDC,EAAR,EAAQA,QAAS3B,EAAjB,EAAiBA,eACTC,EAAqB6B,IAAMa,WAAWV,GAAtChC,iBACR,EAIIF,EAAYC,EAAgBC,GAH7BC,EADH,EACGA,OACApB,EAFH,EAEGA,KACA8B,EAHH,EAGGA,QAYH,OATAkB,IAAMC,WAAU,WACbzC,EAASJ,EAAUlB,EAAcG,MACjC,IAEH2D,IAAMC,WAAU,WACbzC,EAAST,EAAkBsD,EAAYR,EAAS1B,EAAkB,aAClE,CAAC0B,EAAS1B,IAEbT,QAAQC,IAAIO,GAET,gCACG,cAAC,EAAD,CACG0C,GAAI,EACJP,YAAaR,EACbS,YAAY,UAEf,qBAAKJ,UAAU,QAAf,SACG,cAAC,IAAD,CACG9B,OAAQA,EACRpB,KAAMA,EACN8B,QAASA,U,OCrCXgD,EAAe,CACzB,CACGC,KAAM,IACNC,OAAO,EACPC,UAAW1C,GAEd,CACGwC,KAAM,UACNC,OAAO,EACPC,UAAWJ,GAEd,CACGE,KAAM,eACNC,OAAO,EACPC,UCPiB,WACpB,IAAMzE,EAAWgC,cACjB,EAAoCE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAvDC,EAAR,EAAQA,QAAS3B,EAAjB,EAAiBA,eACTC,EAAqB6B,IAAMa,WAAWV,GAAtChC,iBAEF+D,EAAW,YAAI,IAAIC,IAAItC,EAAQvB,KAAI,SAAAtB,GAAI,OAAIA,EAAKuB,UAAQtB,UAAUC,OAAO,EAAG,GAElF,EAIIe,EAAYC,EAAgBC,GAH7BC,EADH,EACGA,OACApB,EAFH,EAEGA,KACA8B,EAHH,EAGGA,QAeH,OAZAkB,IAAMC,WAAU,WACbzC,EAASJ,EAAUlB,EAAcG,MACjC,IAGH2D,IAAMC,WAAU,WACbzC,EAAST,EAAkBsD,EAAYR,EAAS1B,EAAkB,aAClE,CAAC0B,EAAS1B,IAMV,gCACG,sBAAK+B,UAAU,UAAf,UACG,cAAC,EAAD,CACGU,GAAI,EACJP,YAAaR,EACbS,YAAY,QACZkB,QAAS3B,IAEZ,cAAC,EAAD,CACGe,GAAI,EACJD,cAAeuB,EACfE,aAAclE,EACdsD,QAAS3B,EACTS,YAAY,YAGlB,qBAAKJ,UAAU,QAAf,SACG,cAAC,IAAD,CACG9B,OAAQA,EACRpB,KAAMA,EACN8B,QAASA,WDrCrB,CACGiD,KAAM,IACNC,OAAO,EACPC,UAAW1C,I,iBEUF8C,EA5BA,WACZ,IAAQC,EAAwBtC,IAAMa,WAAWV,GAAzCmC,oBACR,OACG,qBAAKpC,UAAWkB,IAAOmB,OAAvB,SACG,sBAAKrC,UAAWkB,IAAOoB,IAAvB,UACG,cAAC,IAAD,CACGC,GAAG,IAAIvC,UAAWkB,IAAOsB,aACzBC,QAAS,kBAAML,EAAoB,KAFtC,SAIG,uCAEH,cAAC,IAAD,CACGG,GAAG,UAAUvC,UAAWkB,IAAOsB,aAC/BC,QAAS,kBAAML,EAAoB,KAFtC,SAIG,yCAEH,cAAC,IAAD,CAAMG,GAAG,eACNE,QAAS,kBAAML,EAAoB,KACnCpC,UAAWkB,IAAOsB,aAFrB,SAIG,yD,kCC3BA,MAA0B,oCCe1BE,EAXG,WACf,OACG,qBAAK1C,UAAWkB,IAAOyB,UAAvB,SACG,qBAAK3C,UAAWkB,IAAO0B,mBAAvB,SACG,qBAAKC,IAAKF,EAAWG,IAAI,mBCyEtBC,EAtEH,WACV,IAAMzF,EAAWgC,cACjB,EAAgCE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAnDC,EAAR,EAAQA,QAASqD,EAAjB,EAAiBA,WACjB,EAAgDlD,IAAMmD,SAAS,IAA/D,mBAAOhF,EAAP,KAAyBmE,EAAzB,KACA,EAA8CtC,IAAMmD,SAAS,IAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoDrD,IAAMmD,SAAS,IAAnE,mBAAOG,EAAP,KAA2BC,EAA3B,KACMxC,EAAgBf,IAAMwD,SAkC5B,OACE,cAACrD,EAAQsD,SAAT,CAAkB/B,MAAO,CACvBvD,mBACAmE,sBACAc,kBACAC,qBACAtC,gBACAD,eAvCmB,SAACK,EAAOb,GAC7B,IAAMe,EAASF,EAAMuC,OAErB,GAAoB,UAAhBpD,EAAyB,CAC3B,IAAMqD,EAAiB5C,EAAc6C,QAAQ9E,QAAQ,GAE/C+E,EAAqBxC,EAAOyC,cAI5BC,EAFgB1C,EAAOvC,QAAQ+E,GAECG,QAAQpD,GAE9C2C,EAAsBQ,GAEtBzB,EAAoBnB,EAAMuC,OAAOhC,OAEjCX,EAAc6C,QAAQlC,MAAQiC,EAAejC,WAG1C,GAAoB,SAAhBpB,EAAwB,CAC/B,IAAM2D,EAAgBpE,EAAQW,QAAO,SAAA4B,GAAY,OAE/CA,EAAa7D,OAAS8C,EAAOK,OAE1BU,EAAa,cAAgBkB,KAElC5F,QAAQC,IAAIsG,GAEZzG,EAAST,EAAkBkH,OAK7B,SAQE,eAAE,IAAF,WACE,cAAC,EAAD,IAECf,GAAc,cAAC,EAAD,IACf,qBAAKhD,UAAWkB,IAAO8C,IAAvB,SACE,cAAC,IAAD,UACGpC,EAAaxD,KAAI,WAA6BmD,GAAW,IAArCO,EAAoC,EAApCA,MAAOD,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,UAChC,OAAO,cAAC,IAAD,CAAmBD,MAAOA,EAAOD,KAAMA,EAAME,UAAWA,GAA5CR,gB,gBC7D3B0C,EAAe,CAClBtE,QAAS,GACT3B,eAAgB,GAChBgF,YAAY,GA2BAtD,GAxBM,WAAmC,IAAlCD,EAAiC,uDAAzBwE,EAAcC,EAAW,uCACpD,OAAQA,EAAOvH,MACZ,KAAKL,EACF,OAAO,2BACDmD,GADN,IAEGE,QAASuE,EAAOtH,QAChBoG,YAAY,IAElB,KAAKxG,EACF,OAAO,2BACDiD,GADN,IAEGzB,eAAgBkG,EAAOtH,UAE7B,KAAKL,EACF,OAAO,2BACDkD,GADN,IAEGuD,WAAYkB,EAAOtH,UAGzB,QACG,OAAO6C,IC7BD0E,eAAgB,CAC5BzE,kB,SCaG0E,I,OAAQC,YAAYC,GAAaC,aANd,SAACH,GAAD,OAAW,SAACI,GAAD,OAAU,SAACN,GAE7C,OADA1G,QAAQC,IAAI,aAAc2G,EAAMK,YACzBD,EAAKN,OAMZQ,QAEIV,GACJ,cAAC,IAAD,CAAUI,MAAOA,GAAjB,SACE,cAAC,EAAD,MAQEO,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,aAAD,UAAaf,KAAmBW,K,mBC/BhDK,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,oBAAoB,aAAe,+B,mBCA3FD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.37e26989.chunk.js","sourcesContent":["export const API_URL = 'https://datausa.io/api/data?drilldowns=Year&measures=Population';\r\n\r\nexport const API_URL_MAIN = 'https://datausa.io/api/data';\r\n\r\nexport const API_DRILLDOWNS = 'drilldowns';\r\nexport const API_MEASURES = 'measures';\r\n\r\n\r\nexport const API_STATE_VALUE = 'State';\r\nexport const API_DRILLDOWNS_VALUE_DEFAULT = 'Year';\r\nexport const API_MEASURES_VALUE_DEFAULT = 'Population';\r\n\r\n\r\nexport const DEFAULT_LIMIT = 6","export const SET_SEARCH_REPOSE = \"SET_REPOSE\";\r\nexport const SET_REPOSE = \"GET_REPOSE\";\r\nexport const CHANGE_FETCH = \"CHANGE_FETCH\";\r\nexport const SET_CURRENT_DATA_USA = \"SET_CURRENT_DATA_USA\";","import axios from 'axios';\r\nimport {\r\n   API_DRILLDOWNS,\r\n   API_MEASURES,\r\n   API_DRILLDOWNS_VALUE_DEFAULT,\r\n   API_MEASURES_VALUE_DEFAULT,\r\n   DEFAULT_LIMIT\r\n} from '../../constants/root';\r\n\r\n\r\nimport {\r\n   SET_REPOSE,\r\n   SET_CURRENT_DATA_USA,\r\n   CHANGE_FETCH,\r\n} from \"./actionTypes\";\r\n\r\n\r\nexport const changeStatusFetch = (statusFetch) => ({ type: CHANGE_FETCH, payload: statusFetch })\r\n\r\nexport const setCurrentDataUSA = (data) => (({ type: SET_CURRENT_DATA_USA, payload: data.reverse().splice(0, 6) }));\r\n\r\n\r\n\r\nexport const setRepose = (data) => (({ type: SET_REPOSE, payload: data }));\r\n\r\n\r\nexport const getRepose =\r\n   (\r\n      api,\r\n      drillDownsOrYear = API_DRILLDOWNS_VALUE_DEFAULT,\r\n      meassures = API_MEASURES_VALUE_DEFAULT\r\n   ) =>\r\n      async (dispatch) => {\r\n         console.log(`${api}?${API_DRILLDOWNS}=${drillDownsOrYear}&${API_MEASURES}=${meassures}`)\r\n         await axios(`${api}?${API_DRILLDOWNS}=${drillDownsOrYear}&${API_MEASURES}=${meassures}`)\r\n            .then(response => {\r\n               dispatch(changeStatusFetch(true))\r\n               dispatch(setRepose(response.data.data))\r\n            })\r\n            .catch(error => console.log(error))\r\n         dispatch(changeStatusFetch(false))\r\n      };\r\n\r\n","export const ChartConfig = (currentDataUsa, selectValueState) => {\r\n   const ChartsConfig = {\r\n      height: 200,\r\n      data: {\r\n         labels: currentDataUsa.map(data => data.Year),\r\n         datasets: [{\r\n            label: selectValueState,\r\n            data: currentDataUsa.map(data => data.Population),\r\n            backgroundColor: [\r\n               'rgba(255, 99, 132, 0.2)',\r\n               'rgba(54, 162, 235, 0.2)',\r\n               'rgba(255, 206, 86, 0.2)',\r\n               'rgba(75, 192, 192, 0.2)',\r\n               'rgba(153, 102, 255, 0.2)',\r\n               'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n               'rgba(255, 99, 132, 1)',\r\n               'rgba(54, 162, 235, 1)',\r\n               'rgba(255, 206, 86, 1)',\r\n               'rgba(75, 192, 192, 1)',\r\n               'rgba(153, 102, 255, 1)',\r\n               'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n         },\r\n         ]\r\n      },\r\n      options: {\r\n         // maintainAspectRatio: false,\r\n         scales: {\r\n            yAxes: [\r\n               {\r\n                  ticks: {\r\n                     beginAtZero: true\r\n                  }\r\n               }\r\n            ]\r\n         },\r\n         plugins: {\r\n            legend: {\r\n               labels: {\r\n                  font: {\r\n                     size: 14\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n   return ChartsConfig\r\n}\r\n// const ChartsConfig = {\r\n//    ChartHome: {\r\n//       height: 200,\r\n//       data: {\r\n//          labels: currentDataUsa.map(data => data.Year),\r\n//          datasets: [{\r\n//             label: selectValueState,\r\n//             data: currentDataUsa.map(data => data.Population),\r\n//             backgroundColor: [\r\n//                'rgba(255, 99, 132, 0.2)',\r\n//                'rgba(54, 162, 235, 0.2)',\r\n//                'rgba(255, 206, 86, 0.2)',\r\n//                'rgba(75, 192, 192, 0.2)',\r\n//                'rgba(153, 102, 255, 0.2)',\r\n//                'rgba(255, 159, 64, 0.2)'\r\n//             ],\r\n//             borderColor: [\r\n//                'rgba(255, 99, 132, 1)',\r\n//                'rgba(54, 162, 235, 1)',\r\n//                'rgba(255, 206, 86, 1)',\r\n//                'rgba(75, 192, 192, 1)',\r\n//                'rgba(153, 102, 255, 1)',\r\n//                'rgba(255, 159, 64, 1)'\r\n//             ],\r\n//             borderWidth: 1\r\n//          },\r\n//          ]\r\n//       },\r\n//       options: {\r\n//          // maintainAspectRatio: false,\r\n//          scales: {\r\n//             yAxes: [\r\n//                {\r\n//                   ticks: {\r\n//                      beginAtZero: true\r\n//                   }\r\n//                }\r\n//             ]\r\n//          },\r\n//          plugins: {\r\n//             legend: {\r\n//                labels: {\r\n//                   font: {\r\n//                      size: 14\r\n//                   }\r\n//                }\r\n//             }\r\n//          }\r\n//       }\r\n//    },\r\n// }","import React from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRepose } from '../../../store/actions/actions'\r\nimport { ChartConfig } from \"../../../services/chartsConfig\";\r\nimport { API_URL_MAIN } from './../../../constants/root';\r\n\r\n\r\nconst ChartHome = () => {\r\n   const dispatch = useDispatch()\r\n   const { datausa } = useSelector(state => state.reposReducer)\r\n   const transfromDataUSA = datausa.map(x => x).reverse().slice(0, 6);\r\n\r\n   const {\r\n      height,\r\n      data,\r\n      options\r\n   } = ChartConfig(transfromDataUSA, 'Statistics USA')\r\n\r\n   React.useEffect(() => {\r\n      dispatch(getRepose(API_URL_MAIN))\r\n   }, [])\r\n\r\n   return (\r\n      <div className=\"chart\">\r\n         <Bar\r\n            height={height}\r\n            data={data}\r\n            options={options}\r\n         />\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ChartHome","import React from 'react';\r\n\r\n\r\nexport const Context = React.createContext();","export const sortDataUSA = (datausa, selectValue, valueSorting) => {\r\n   const dataUSAFilter = datausa.filter(dataUsa => dataUsa[valueSorting] === selectValue)\r\n   return dataUSAFilter\r\n}\r\n\r\nexport const sortDataUSAForYear = (dataUSA, valueSorting, valueYear) => {\r\n   const dataUSAFilter = dataUSA.filter(dataUSA => dataUSA[valueSorting] === valueYear)\r\n   return { dataUSAFilter }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport { Context } from '../../context/context';\r\nimport styles from './Select.module.css';\r\n\r\n\r\nconst Select = ({ sortDataUSA, sortDataYears, id, selectValue }) => {\r\n   const { getValueSelect, refSelectYear } = React.useContext(Context);\r\n   const selectCurrentDefaultValue = id === 1 ? 'Select State' : 'Select Year';\r\n   return (\r\n      <select\r\n         defaultValue={selectCurrentDefaultValue}\r\n         data-id={id}\r\n         onChange={(event) => getValueSelect(event, selectValue)}\r\n         className={styles.select}\r\n         ref={refSelectYear}\r\n      >\r\n         <option disabled>{selectCurrentDefaultValue}</option>\r\n         {\r\n            sortDataUSA &&\r\n            sortDataUSA.map((dataUSA, index) => {\r\n               return (\r\n                  <option\r\n                     key={index}\r\n                     value={dataUSA.State}\r\n                     data-id={dataUSA['ID State']}\r\n                  >\r\n                     {dataUSA.State}\r\n                  </option>\r\n               );\r\n            })\r\n         }\r\n         {\r\n            sortDataYears && sortDataYears.map((year, index) => {\r\n               return (\r\n                  <option\r\n                     key={index}\r\n                     value={year}\r\n                  >\r\n                     {year}\r\n                  </option>\r\n               )\r\n            })\r\n         }\r\n      </select >\r\n   )\r\n}\r\n\r\nSelect.propTypes = {\r\n   sortDataUSA: PropTypes.array,\r\n   sortDataYears: PropTypes.array,\r\n   id: PropTypes.number,\r\n   selectValue: PropTypes.string\r\n}\r\n\r\n\r\nexport default Select;","import React from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRepose } from '../../../store/actions/actions'\r\nimport { API_URL_MAIN, API_STATE_VALUE } from './../../../constants/root';\r\nimport { Context } from \"../../../context/context\";\r\nimport { sortDataUSA } from \"../../../services/sortDataUSA\";\r\nimport { setCurrentDataUSA } from \"../../../store/actions/actions\";\r\nimport { ChartConfig } from \"../../../services/chartsConfig\";\r\nimport Select from \"../../Select\";\r\n\r\n\r\nconst ChartStates = () => {\r\n   const dispatch = useDispatch();\r\n   const { datausa, currentDataUsa } = useSelector(state => state.reposReducer);\r\n   const { selectValueState } = React.useContext(Context);\r\n   const {\r\n      height,\r\n      data,\r\n      options\r\n   } = ChartConfig(currentDataUsa, selectValueState)\r\n\r\n   React.useEffect(() => {\r\n      dispatch(getRepose(API_URL_MAIN, API_STATE_VALUE))\r\n   }, [])\r\n\r\n   React.useEffect(() => {\r\n      dispatch(setCurrentDataUSA(sortDataUSA(datausa, selectValueState, 'State')))\r\n   }, [datausa, selectValueState])\r\n\r\n   console.log(currentDataUsa)\r\n   return (\r\n      <div>\r\n         <Select\r\n            id={1}\r\n            sortDataUSA={datausa}\r\n            selectValue='state'\r\n         />\r\n         <div className=\"chart\">\r\n            <Bar\r\n               height={height}\r\n               data={data}\r\n               options={options}\r\n            />\r\n         </div>\r\n\r\n      </div>\r\n\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ChartStates","import ChartHome from \"../components/Charts/ChartHome\";\r\nimport ChartStates from './../components/Charts/ChartStates';\r\nimport ChartStateYear from './../components/Charts/ChartStateYear';\r\n\r\n\r\nexport const RouterConfig = [\r\n   {\r\n      path: \"/\",\r\n      exact: true,\r\n      component: ChartHome\r\n   },\r\n   {\r\n      path: \"/states\",\r\n      exact: true,\r\n      component: ChartStates\r\n   },\r\n   {\r\n      path: \"/statesyears\",\r\n      exact: true,\r\n      component: ChartStateYear\r\n   },\r\n   {\r\n      path: \"*\",\r\n      exact: true,\r\n      component: ChartHome\r\n   }\r\n];\r\n","import React from \"react\";\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRepose, setCurrentDataUSA } from '../../../store/actions/actions'\r\nimport { API_URL_MAIN, API_STATE_VALUE } from './../../../constants/root';\r\nimport { Context } from \"../../../context/context\";\r\nimport { sortDataUSA } from \"../../../services/sortDataUSA\";\r\nimport { ChartConfig } from './../../../services/chartsConfig';\r\n\r\nimport Select from \"../../Select\";\r\n\r\nconst ChartStateYear = () => {\r\n   const dispatch = useDispatch();\r\n   const { datausa, currentDataUsa } = useSelector(state => state.reposReducer);\r\n   const { selectValueState } = React.useContext(Context);\r\n\r\n   const getYears = [...new Set(datausa.map(data => data.Year))].reverse().splice(0, 6);\r\n\r\n   const {\r\n      height,\r\n      data,\r\n      options\r\n   } = ChartConfig(currentDataUsa, selectValueState)\r\n\r\n   React.useEffect(() => {\r\n      dispatch(getRepose(API_URL_MAIN, API_STATE_VALUE))\r\n   }, [])\r\n\r\n\r\n   React.useEffect(() => {\r\n      dispatch(setCurrentDataUSA(sortDataUSA(datausa, selectValueState, 'State')))\r\n   }, [datausa, selectValueState])\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div>\r\n         <div className=\"selects\">\r\n            <Select\r\n               id={1}\r\n               sortDataUSA={datausa}\r\n               selectValue='state'\r\n               dataUSA={datausa}\r\n            />\r\n            <Select\r\n               id={2}\r\n               sortDataYears={getYears}\r\n               currentState={currentDataUsa}\r\n               dataUSA={datausa}\r\n               selectValue='year'\r\n            />\r\n         </div>\r\n         <div className=\"chart\">\r\n            <Bar\r\n               height={height}\r\n               data={data}\r\n               options={options}\r\n            />\r\n         </div>\r\n\r\n      </div>\r\n\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ChartStateYear","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/context\";\r\nimport styles from './Header.module.css'\r\n\r\n\r\nconst Header = () => {\r\n   const { setSelectValueState } = React.useContext(Context)\r\n   return (\r\n      <div className={styles.header}>\r\n         <nav className={styles.nav}>\r\n            <Link\r\n               to=\"/\" className={styles.header__link}\r\n               onClick={() => setSelectValueState([])}\r\n            >\r\n               <p>Home</p>\r\n            </Link>\r\n            <Link\r\n               to=\"/states\" className={styles.header__link}\r\n               onClick={() => setSelectValueState([])}\r\n            >\r\n               <p>States</p>\r\n            </Link>\r\n            <Link to=\"/statesyears\"\r\n               onClick={() => setSelectValueState([])}\r\n               className={styles.header__link}\r\n            >\r\n               <p>States and Years</p>\r\n            </Link>\r\n         </nav>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/preload.24d855d3.svg\";","import styles from './Preloader.module.css';\r\nimport preloader from './img/preload.svg';\r\n\r\n\r\nconst Preloader = () => {\r\n   return (\r\n      <div className={styles.preloader}>\r\n         <div className={styles.preloader__wrapper}>\r\n            <img src={preloader} alt=\"preloader\" />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Preloader;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { RouterConfig } from \"../../routes/RoutesConfig\";\nimport Header from \"../Header\";\nimport { Context } from '../../context/context';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentDataUSA } from '../../store/actions/actions';\nimport styles from './App.module.css';\nimport Preloader from '../Preloader';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { datausa, isFetching } = useSelector(state => state.reposReducer);\n  const [selectValueState, setSelectValueState] = React.useState('');\n  const [selectValueYear, setSelectValueYear] = React.useState('');\n  const [currentSelectState, setCurrentSelectState] = React.useState('')\n  const refSelectYear = React.useRef();\n\n  const getValueSelect = (event, selectValue) => {\n    const select = event.target;\n\n    if (selectValue === \"state\") {\n      const selectDisabled = refSelectYear.current.options[0];\n\n      const currentIndexOption = select.selectedIndex;\n\n      const currentOption = select.options[currentIndexOption];\n\n      const dataIdSetOption = currentOption.dataset.id;\n\n      setCurrentSelectState(dataIdSetOption);\n\n      setSelectValueState(event.target.value);\n\n      refSelectYear.current.value = selectDisabled.value;\n\n    }\n    else if (selectValue === \"year\") {\n      const filterDataUSA = datausa.filter(currentState =>\n\n        currentState.Year === select.value\n\n        && currentState['ID State'] === currentSelectState)\n\n      console.log(filterDataUSA)\n\n      dispatch(setCurrentDataUSA(filterDataUSA))\n    }\n  }\n\n  return (\n    <Context.Provider value={{\n      selectValueState,\n      setSelectValueState,\n      selectValueYear,\n      setSelectValueYear,\n      refSelectYear,\n      getValueSelect\n    }}>\n      < Router >\n        <Header />\n        {/* <Preloader /> */}\n        {isFetching && <Preloader />}\n        <div className={styles.app}>\n          <Switch>\n            {RouterConfig.map(({ exact, path, component }, index) => {\n              return <Route key={index} exact={exact} path={path} component={component} />\n            })}\n          </Switch>\n\n        </div>\n      </Router>\n    </ Context.Provider >\n\n  );\n}\n\n\n\n\nexport default App;\n","import {\r\n   SET_REPOSE,\r\n   SET_CURRENT_DATA_USA,\r\n   CHANGE_FETCH\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n   datausa: [],\r\n   currentDataUsa: [],\r\n   isFetching: true\r\n};\r\n\r\nconst reposReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_REPOSE:\r\n         return {\r\n            ...state,\r\n            datausa: action.payload,\r\n            isFetching: false\r\n         };\r\n      case SET_CURRENT_DATA_USA:\r\n         return {\r\n            ...state,\r\n            currentDataUsa: action.payload,\r\n         };\r\n      case CHANGE_FETCH:\r\n         return {\r\n            ...state,\r\n            isFetching: action.payload\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default reposReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport reposReducer from \"./reducers/reposReducer\";\r\n\r\nexport default combineReducers({\r\n   reposReducer\r\n});\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport reduxThunk from \"redux-thunk\";\nimport \"./styles/index.css\";\n\n\nconst loggetMiddleware = (store) => (next) => (action) => {\n  console.log('Middleware', store.getState())\n  return next(action)\n}\n\n\nconst store = createStore(rootReducer, applyMiddleware(\n  loggetMiddleware,\n  reduxThunk));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n\n\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<StrictMode>{app}</StrictMode>, rootElement);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3hsYt\",\"nav\":\"Header_nav__3bee1\",\"header__link\":\"Header_header__link__2-4nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1IiOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__1SKdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1GHtq\"};"],"sourceRoot":""}